swagger: "2.0"
info:
  description: "code test drive"
  version: "0.1"
  title: "khazad-dum"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/"
tags:
  - name: "status"
    description: ""
  - name: "item"
    description: ""
schemes:
  - "http"
paths:
  /status:
    get:
      tags:
        - "status"
      summary: ""
      description: ""
      operationId: "getStatus"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Status"
  /item:
    get:
      tags:
        - "item"
      summary: ""
      description: ""
      operationId: "getItemById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: ""
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetItemResponse"
    post:
      tags:
        - "item"
      summary: ""
      description: ""
      operationId: "postItem"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "item"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/PostItemRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PostItemResponse"
definitions:
  Status:
    type: "object"
    properties:
      dateTime:
        type: "string"
      message:
        type: "string"
    example:
      dateTime: "2021-02-05T15:35:34.701-05:00[America/Bogota]"
      message: "UP!"
  Item:
    type: "object"
    required:
      - "name"
      - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
          - "available"
          - "pending"
          - "sold"
  GetItemResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  PostItemRequest:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
  PostItemResponse:
    type: "object"
    required:
      - "name"
      - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
          - "available"
          - "pending"
          - "sold"
